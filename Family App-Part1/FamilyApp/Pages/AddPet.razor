@page "/AddPet"
@page "/AddPet/{StreetNameF}/{HouseNumberF:int}"
@using FamilyApp.Models
@using FamilyApp.Data
@inject IMemberService MemberService
@inject IFamilyService FamilyService
@inject NavigationManager NavigationManager
<h3>Add Pet</h3>
<h3>Family address:@StreetNameF +@HouseNumberF</h3>

<EditForm Model="@newPet" OnValidSubmit="@AddNewPet">
        <DataAnnotationsValidator/>
                    <ValidationSummary/>
<div class="form-group">
    Name<br/>
    <InputText @bind-Value="newPet.Name"/>
</div>
        <div class="form-group">
                    Age<br/>
                    <InputNumber @bind-Value="newPet.Age"/>
                </div>
        <div class="form-group">
                   <InputSelect class="form-control" id="species" @bind-Value="@newPet.Species" style="width:200px">
                       <option value="species" selected disabled>Species</option>  
                       @foreach (var sp in species)
                       {
                           <option value="@sp">@sp</option>
                       }
        
                   </InputSelect>
                   
                                      </div>
        <p class="actions">
                <button class="btn btn-outline-dark" type="submit">Add</button>
            </p>
        </EditForm>



@code {
        
    [Parameter]
    public string StreetNameF { get; set; }
    [Parameter]
    public int HouseNumberF { get; set; }
    
    public Family Family { get; set; }
    Pet newPet=new Pet();
    
        
    protected override async Task OnInitializedAsync() {
        Family = await FamilyService.GetFamilyAsync(StreetNameF, HouseNumberF);
    }
    
    public void AddNewPet()
    {
      
        Family.Pets.Add(newPet);
        FamilyService.UpdateFamily(Family);
     //   MemberService.AddPetAsync(newPet);
        NavigationManager.NavigateTo("/");
    }
    
    List<string> species = new[] {"Hamster", "Bunny", "Frog", "Budgerigar","Owl", "Snake", "Cat", "Dog", "None"}.ToList();
}