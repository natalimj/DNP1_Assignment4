#pragma checksum "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\Pages\FindMember.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a0b6b8aa18b41b127f03d37223c068e4b281c5a7"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FamilyApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using FamilyApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using FamilyApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\Pages\FindMember.razor"
using FamilyApp.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\Pages\FindMember.razor"
using FamilyApp.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\Pages\FindMember.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\Pages\FindMember.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/SeeAdult")]
    public partial class FindMember : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 97 "C:\Users\natal\Desktop\DNP1-Assignment2\FamilyApp\Pages\FindMember.razor"
       
    private IList<Adult> filteredAdults;
    private IList<Child> filteredChildren;
    private IList<Family> families;
    private IList<Adult> adults;
    private IList<Child> children;
    private Adult myAdult;
    private string? byName;
    private string errorMessage = "";
    
    protected override async Task OnInitializedAsync()
    {
        adults = await MemberService.GetAdultsAsync();
        children = await MemberService.GetChildrenAsync();
        families = await FamilyService.GetFamiliesAsync();
        filteredAdults = adults;
        filteredChildren = children;
    }

    private void FilterByName(String byName)
    {
        string first = " ";
        string last = " ";


        if (byName == null)
        {
            errorMessage = "Please enter a name!";
        }
        else
        {

            if (byName.Trim().Contains(" "))
        {
            string[] words = byName.Split(' ');
            first = words[0];
            last = words[1];
        }


        if (byName == " ")
        {
            errorMessage = "Please enter a name!";
        }

        else
        {
            errorMessage = "";

    //filters people by given words-- name or lastname

            filteredChildren = children.Where(c => c.FirstName.Equals(byName.Trim(), StringComparison.OrdinalIgnoreCase)
                                                   || c.LastName.Equals(byName.Trim(), StringComparison.OrdinalIgnoreCase)
                                                   || c.FirstName.Equals(first, StringComparison.OrdinalIgnoreCase)
                                                   || c.LastName.Equals(last, StringComparison.OrdinalIgnoreCase)
                                                   || c.FirstName.Equals(last, StringComparison.OrdinalIgnoreCase)
                                                   || c.LastName.Equals(first, StringComparison.OrdinalIgnoreCase)
                ).ToList();


            filteredAdults = adults.Where(a => a.FirstName.Equals(byName.Trim(), StringComparison.OrdinalIgnoreCase)
                                               || a.LastName.Equals(byName.Trim(), StringComparison.OrdinalIgnoreCase)
                                               || a.FirstName.Equals(first, StringComparison.OrdinalIgnoreCase)
                                               || a.LastName.Equals(last, StringComparison.OrdinalIgnoreCase)
                                               || a.FirstName.Equals(last, StringComparison.OrdinalIgnoreCase)
                                               || a.LastName.Equals(first, StringComparison.OrdinalIgnoreCase)
                ).ToList();
        }
        }
    }

    
    private void RemoveAdult(Adult adult)
    {
        FamilyService.RemoveAdultFromFamilyAsync(adult);
        MemberService.RemoveAdultAsync(adult);
        adults.Remove(adult);
        filteredAdults.Remove(adult);
        byName = "";
        errorMessage = adult.FirstName + " " + adult.LastName + " has been removed.";
    }
    
    private void RemoveChild(Child child)
    {
        MemberService.RemoveChildAsync(child);
        FamilyService.RemoveChildFromFamilyAsync(child);
        children.Remove(child);
        filteredChildren.Remove(child);
        byName = "";
        errorMessage = child.FirstName + " " + child.LastName + " has been removed.";
    }

    private void NavigateToFamily(Adult adult)
    {
        List<Family> newFamilies=new List<Family>();
        foreach (var family in families)
        {
            foreach (var ad in family.Adults)
            {
                if (adult.Id == ad.Id)
                {
                    newFamilies.Add(family);
                }
            }
        }
        try
        {
            NavigationManager.NavigateTo("FamilyPage/" + newFamilies[0].StreetName+"/"+newFamilies[0].HouseNumber);
        }
        catch
        {
            errorMessage = "This member does not belong a family";
        }
    }
    
    private void NavigateToFamily(Child child)
    {
        List<Family> newFamilies=new List<Family>();
        
        foreach (var family in families)
        {
            foreach (var ch in family.Children)
            {
                if (child.Id == ch.Id)
                {
                    newFamilies.Add(family);
                }
            }
        }
        
        try
        {
            NavigationManager.NavigateTo("FamilyPage/" + newFamilies[0].StreetName+"/"+newFamilies[0].HouseNumber);
        }
        catch
        {
            errorMessage = "This member does not belong a family";
        }
   
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFamilyService FamilyService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMemberService MemberService { get; set; }
    }
}
#pragma warning restore 1591
